// deprecated
// eslint-disable-next-line max-classes-per-file
import React from 'react';
import { Link } from 'react-router-dom';
import {
  Form, Input, Button, Icon, notification,
} from 'antd';
import { logar } from '../../util/APIUtils';
import './Logar.css';
import { TOKEN_ACESSO } from '../../constantes';

const FormItem = Form.Item;

/**
 * O componente Login renderiza o formulário de login chama a API de login para
 * autenticar um usuário.
 */

class LoginForm extends React.Component {
  constructor(props) {
    super(props);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleSubmit(event) {
    event.preventDefault();
    // eslint-disable-next-line react/prop-types
    const { form, onLogin } = this.props;
    // eslint-disable-next-line react/prop-types
    form.validateFields((err, values) => {
      if (!err) {
        const loginRequest = { ...values };
        logar(loginRequest)
          .then((response) => {
            localStorage.setItem(TOKEN_ACESSO, response.accessToken);
            onLogin();
          }).catch((error) => {
            if (error.status === 401) {
              notification.error({
                message: 'Polling App',
                description: 'Your Username or Password is incorrect. Please try again!',
              });
            } else {
              notification.error({
                message: 'Polling App',
                description: error.message || 'Sorry! Something went wrong. Please try again!',
              });
            }
          });
      }
    });
  }

  render() {
    // eslint-disable-next-line react/prop-types
    const { form } = this.props;
    // eslint-disable-next-line react/prop-types
    const { getFieldDecorator } = form;
    return (
      <Form onSubmit={this.handleSubmit} className="login-form">
        <FormItem>
          {getFieldDecorator('usernameOrEmail', {
            rules: [{ required: true, message: 'Please input your username or email!' }],
          })(
            <Input
              prefix={<Icon type="user" />}
              size="large"
              name="usernameOrEmail"
              placeholder="Username or Email"
            />,
          )}
        </FormItem>
        <FormItem>
          {getFieldDecorator('password', {
            rules: [{ required: true, message: 'Please input your Password!' }],
          })(
            <Input
              prefix={<Icon type="lock" />}
              size="large"
              name="password"
              type="password"
              placeholder="Password"
            />,
          )}
        </FormItem>
        <FormItem>
          <Button type="primary" htmlType="submit" size="large" className="login-form-button">Login</Button>
          Or
          {' '}
          <Link to="/signup">register now!</Link>
        </FormItem>
      </Form>
    );
  }
}

// eslint-disable-next-line react/prefer-stateless-function
class LoginOld extends React.Component {
  render() {
    const AntWrappedLoginForm = Form.create()(LoginForm); // deprecated
    // eslint-disable-next-line react/prop-types
    const { onLogin } = this.props;
    return (
      <div className="login-container">
        <h1 className="page-title">Login</h1>
        <div className="login-content">
          <AntWrappedLoginForm onLogin={onLogin} />
        </div>
      </div>
    );
  }
}

export default LoginOld;
